{"version":3,"file":"utm-aska.min.js","sources":["../src/defaultUtmKeys.js","../src/getUtmFromUrl/getUrmFromUrl.js","../src/getCookieByName/getCookieByName.js","../src/getUtmFromCookies/getUtmFromCookies.js","../src/getUtmParams/getUtmParams.js"],"sourcesContent":["/**\r\n * Default utm keys\r\n * @type {string[]}\r\n */\r\nconst defaultUtmKeys =  [\r\n    'utm_source',\r\n    'utm_medium',\r\n    'utm_campaign',\r\n    'utm_term',\r\n    'utm_content',\r\n]\r\n\r\nexport { defaultUtmKeys }","import { defaultUtmKeys as defaultImportedKeys } from \"../defaultUtmKeys\"\r\n\r\n/**\r\n * Get utm tags from url\r\n * @param url\r\n * @param utmKeysMap\r\n * @returns {{}}\r\n */\r\nexport default function getUtmFromUr(url, utmKeysMap = []) {\r\n\r\n    let defaultUtmKeys = [...defaultImportedKeys, utmKeysMap]\r\n\r\n    let queryString = url\r\n        ? url.split('?')[1]\r\n        : window.location.search.slice(1)\r\n    const obj = {}\r\n\r\n    if (queryString) {\r\n        queryString = queryString.split('#')[0]\r\n        const arr = queryString.split('&')\r\n\r\n        for (let i = 0; i < arr.length; i++) {\r\n            const a = arr[i].split('=')\r\n            let paramName = a[0]\r\n            if (defaultUtmKeys.includes(paramName)) {\r\n                let paramValue = typeof a[1] === 'undefined' ? true : a[1]\r\n\r\n                paramName = paramName.toLowerCase()\r\n                if (typeof paramValue === 'string')\r\n                    paramValue = paramValue.toLowerCase()\r\n\r\n                if (paramName.match(/\\[(\\d+)?]$/)) {\r\n                    const key = paramName.replace(/\\[(\\d+)?]/, '')\r\n                    if (!obj[key]) obj[key] = []\r\n\r\n                    if (paramName.match(/\\[\\d+]$/)) {\r\n                        const index = /\\[(\\d+)]/.exec(paramName)[1]\r\n                        obj[key][index] = paramValue\r\n                    } else {\r\n                        obj[key].push(paramValue)\r\n                    }\r\n                } else if (!obj[paramName]) {\r\n                    obj[paramName] = paramValue\r\n                } else if (obj[paramName] && typeof obj[paramName] === 'string') {\r\n                    obj[paramName] = [obj[paramName]]\r\n                    obj[paramName].push(paramValue)\r\n                } else {\r\n                    obj[paramName].push(paramValue)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return obj\r\n}","/**\r\n * Get cookie value by name\r\n * @param name\r\n * @returns {any}\r\n */\r\nexport default function getCookieByName(name) {\r\n    const value = `; ${document.cookie}`\r\n    const parts = value.split(`; ${name}=`)\r\n    if (parts.length === 2)\r\n        return JSON.parse(decodeURIComponent(parts.pop().split(';').shift()))\r\n}","import { defaultUtmKeys as defaultImportedKeys } from \"../defaultUtmKeys\"\r\n\r\n/**\r\n * Get utm tags from cookies\r\n * @param utmKeysMap\r\n * @returns {{}}\r\n */\r\nexport default function getUtmFromCookies(utmKeysMap = []) {\r\n    let defaultUtmKeys = [...defaultImportedKeys, ...utmKeysMap]\r\n\r\n    return document.cookie.split(';').reduce((cookies, cookie) => {\r\n        const [name, val] = cookie.split('=').map((c) => c.trim())\r\n        if (defaultUtmKeys.includes(name)) {\r\n            cookies[name] = val\r\n        }\r\n        return cookies\r\n    }, {})\r\n}","import getUtmFromUrl from \"../getUtmFromUrl\";\r\nimport getCookieByName from \"../getCookieByName\";\r\nimport getUtmFromCookies from \"../getUtmFromCookies\";\r\nimport { defaultUtmKeys as defaultImportedKeys } from \"../defaultUtmKeys\"\r\n\r\n/**\r\n * Get all utm keys from url or cookies\r\n * @param utmKeysMap\r\n * @returns {{}}\r\n */\r\nexport default function getUtmParams(utmKeysMap = []) {\r\n\r\n    let defaultUtmKeys = [...defaultImportedKeys, ...utmKeysMap]\r\n\r\n    let utmParamsObject\r\n\r\n    utmParamsObject = getUtmFromUrl(window.location.href, defaultUtmKeys)\r\n    if (utmParamsObject && Object.keys(utmParamsObject).length === 0) {\r\n        utmParamsObject = getUtmFromCookies(defaultUtmKeys)\r\n        if (Object.keys(utmParamsObject).length === 0) {\r\n            utmParamsObject = getCookieByName('utm')\r\n        }\r\n    }\r\n\r\n    return utmParamsObject\r\n}"],"names":["defaultUtmKeys","getUtmFromUr","url","utmKeysMap","defaultImportedKeys","queryString","split","window","location","search","slice","obj","arr","i","length","a","paramName","includes","paramValue","toLowerCase","match","key","replace","index","exec","push","getCookieByName","name","parts","document","cookie","JSON","parse","decodeURIComponent","pop","shift","getUtmFromCookies","reduce","cookies","map","c","trim","val","utmParamsObject","getUtmFromUrl","href","Object","keys"],"mappings":"giDAIA,IAAMA,EAAkB,CACpB,aACA,aACA,eACA,WACA,eCDW,SAASC,EAAaC,OAAKC,yDAAa,GAE/CH,cAAqBI,IAAqBD,IAE1CE,EAAcH,EACZA,EAAII,MAAM,KAAK,GACfC,OAAOC,SAASC,OAAOC,MAAM,GAC7BC,EAAM,MAERN,UAEMO,GADNP,EAAcA,EAAYC,MAAM,KAAK,IACbA,MAAM,KAErBO,EAAI,EAAGA,EAAID,EAAIE,OAAQD,IAAK,KAC3BE,EAAIH,EAAIC,GAAGP,MAAM,KACnBU,EAAYD,EAAE,MACdf,EAAeiB,SAASD,GAAY,KAChCE,OAA6B,IAATH,EAAE,IAA4BA,EAAE,MAExDC,EAAYA,EAAUG,cACI,iBAAfD,IACPA,EAAaA,EAAWC,eAExBH,EAAUI,MAAM,cAAe,KACzBC,EAAML,EAAUM,QAAQ,YAAa,OACtCX,EAAIU,KAAMV,EAAIU,GAAO,IAEtBL,EAAUI,MAAM,WAAY,KACtBG,EAAQ,WAAWC,KAAKR,GAAW,GACzCL,EAAIU,GAAKE,GAASL,OAElBP,EAAIU,GAAKI,KAAKP,QAEVP,EAAIK,GAELL,EAAIK,IAAwC,iBAAnBL,EAAIK,IACpCL,EAAIK,GAAa,CAACL,EAAIK,IACtBL,EAAIK,GAAWS,KAAKP,IAEpBP,EAAIK,GAAWS,KAAKP,GALpBP,EAAIK,GAAaE,UAW1BP,EChDI,SAASe,EAAgBC,OAE9BC,cADaC,SAASC,QACRxB,kBAAWqB,WACV,IAAjBC,EAAMd,OACN,OAAOiB,KAAKC,MAAMC,mBAAmBL,EAAMM,MAAM5B,MAAM,KAAK6B,UCFrD,SAASC,QAAkBjC,yDAAa,GAC/CH,cAAqBI,KAAwBD,WAE1C0B,SAASC,OAAOxB,MAAM,KAAK+B,QAAO,SAACC,EAASR,WAC3BA,EAAOxB,MAAM,KAAKiC,KAAI,SAACC,UAAMA,EAAEC,aAA5Cd,OAAMe,cACT1C,EAAeiB,SAASU,KACxBW,EAAQX,GAAQe,GAEbJ,IACR,+ECNQ,eAIPK,EAJ6BxC,yDAAa,GAE1CH,cAAqBI,KAAwBD,WAIjDwC,EAAkBC,EAAcrC,OAAOC,SAASqC,KAAM7C,KACS,IAAxC8C,OAAOC,KAAKJ,GAAiB7B,SAChD6B,EAAkBP,EAAkBpC,GACQ,IAAxC8C,OAAOC,KAAKJ,GAAiB7B,SAC7B6B,EAAkBjB,EAAgB,SAInCiB"}